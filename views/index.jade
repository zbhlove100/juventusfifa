extends layout
block content
  //- nav.navbar.navbar-default( role="navigation")
  //-   div.container-fluid
  //-     a.navbar-brand(href="#") Brand
  .container#maincontainer
    .row
      .col-xs-12
        button.btn-primary.btn(onclick="randomrecipe()") random
    .row
      .col-xs-12
        pre#recipearea(style="height:200px")
        img#imagearea(height="300px",width="500px")
    .row
      .col-xs-12
        h1 赛事信息
    .row
      .col-xs-12
        .panel.panel-default
          .panel-heading 报名比赛
          .panel-body(style="background-color: #D06161")
            table.table.table-striped#signuptable
              thead
                th 比赛
                th 备注
                th
              tbody

    .row
      .col-xs-12
        .panel.panel-default
          .panel-heading 最近的比赛
          .panel-body(style="background-color: #E8E2E6")
            .row
              .col-xs-6.col-sm-3
                .matchresultcard#card0
                  //- .row.matchresultteam
                  //-   .col-xs-8
                  //-     p zhangbohan
                  //-   .col-xs-4
                  //-     p 9
                  //- .row
                  //-   .col-xs-12.vsfont
                  //-     strong VS                    
                  //- .row.matchresultteam
                  //-   .col-xs-8
                  //-     p 体感效果
                  //-   .col-xs-4
                  //-     p 6
              .col-xs-6.col-sm-3
                .matchresultcard#card1
              .col-xs-6.col-sm-3
                .matchresultcard#card2
              .col-xs-6.col-sm-3
                .matchresultcard#card3

    //- .row
    //-   .col-xs-12
    //-     .panel.panel-default
    //-       .panel-heading Group A
    //-       .panel-body
    //-         table.table.table-striped
    //-           thead
    //-             th NAME
    //-             th 比赛场数
    //-             th 胜
    //-             th 平
    //-             th 负 
    //-             th 进球 
    //-             th 失球 
    //-             th 净胜球 
    //-             th 积分 
    //-           tr
    //-             td A
    //-             td container
    //-             td A
    //-             td blo
    //-             td container
    //-             td A
    //-             td blo
    //-             td container
    //-             td 100
    include ga
    script.
      function randomrecipe(){
        var JsonUti = {  
            //定义换行符  
            n: "\n",  
            //定义制表符  
            t: "\t",  
            //转换String  
            convertToString: function(obj) {  
                return JsonUti.__writeObj(obj, 1);  
            },  
            //写对象  
            __writeObj: function(obj //对象  
            , level //层次（基数为1）  
            , isInArray) { //此对象是否在一个集合内  
                //如果为空，直接输出null  
                if (obj == null) {  
                    return "null";  
                }  
                //为普通类型，直接输出值  
                if (obj.constructor == Number || obj.constructor == Date || obj.constructor == String || obj.constructor == Boolean) {  
                    var v = obj.toString();  
                    var tab = isInArray ? JsonUti.__repeatStr(JsonUti.t, level - 1) : "";  
                    if (obj.constructor == String || obj.constructor == Date) {  
                        //时间格式化只是单纯输出字符串，而不是Date对象  
                        return tab + ("\"" + v + "\"");  
                    }  
                    else if (obj.constructor == Boolean) {  
                        return tab + v.toLowerCase();  
                    }  
                    else {  
                        return tab + (v);  
                    }  
                }  
                //写Json对象，缓存字符串  
                var currentObjStrings = [];  
                //遍历属性  
                for (var name in obj) {  
                    var temp = [];  
                    //格式化Tab  
                    var paddingTab = JsonUti.__repeatStr(JsonUti.t, level);  
                    temp.push(paddingTab);  
                    //写出属性名  
                    temp.push(name + " : ");  
                    var val = obj[name];  
                    if (val == null) {  
                        temp.push("null");  
                    }  
                    else {  
                        var c = val.constructor;  
                        if (c == Array) { //如果为集合，循环内部对象  
                            temp.push(JsonUti.n + paddingTab + "[" + JsonUti.n);  
                            var levelUp = level + 2; //层级+2  
                            var tempArrValue = []; //集合元素相关字符串缓存片段  
                            for (var i = 0; i < val.length; i++) {  
                                //递归写对象  
                                tempArrValue.push(JsonUti.__writeObj(val[i], levelUp, true));  
                            }  
                            temp.push(tempArrValue.join("," + JsonUti.n));  
                            temp.push(JsonUti.n + paddingTab + "]");  
                        }  
                        else if (c == Function) {  
                            temp.push("[Function]");  
                        }  
                        else {  
                            //递归写对象  
                            temp.push(JsonUti.__writeObj(val, level + 1));  
                        }  
                    }  
                    //加入当前对象“属性”字符串  
                    currentObjStrings.push(temp.join(""));  
                }  
                return (level > 1 && !isInArray ? JsonUti.n: "") //如果Json对象是内部，就要换行格式化  
                + JsonUti.__repeatStr(JsonUti.t, level - 1) + "{" + JsonUti.n //加层次Tab格式化  
                + currentObjStrings.join("," + JsonUti.n) //串联所有属性值  
                + JsonUti.n + JsonUti.__repeatStr(JsonUti.t, level - 1) + "}"; //封闭对象  
            },  
            __isArray: function(obj) {  
                if (obj) {  
                    return obj.constructor == Array;  
                }  
                return false;  
            },  
            __repeatStr: function(str, times) {  
                var newStr = [];  
                if (times > 0) {  
                    for (var i = 0; i < times; i++) {  
                        newStr.push(str);  
                    }  
                }  
                return newStr.join("");  
            }  
        }; 
        $.ajax({
          url:"/randomrecipe",
          type:"GET",
          dataType:"json",
          success:function(data){ 
            $("#recipearea").text(JsonUti.convertToString(data))
            $("#imagearea").attr("src","http://recipe.oss-cn-beijing.aliyuncs.com/"+data.baseimg[0].ossname+".jpg")
          }
          })
      }
      var info_template = '<div class="alert alert-{infoclass} alert-dismissable">' + 
                    '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>' +
                    '{substitue}' +
                   '</div>';
      var cardtemplate ='<div class="row matchresultteam">'+
                            '<div class="col-xs-8"><p>{homeplayername}</p></div>'+
                            '<div class="col-xs-4"><p>{homescore}</p></div>'+
                          '</div><div class="row"><div class="col-xs-12 vsfont"><strong>VS </strong></div></div>'+
                          '<div class="row matchresultteam"><div class="col-xs-8"><p>{awayplayername}</p></div>'+
                            '<div class="col-xs-4"><p>{awayscore}</p></div></div>';
      function alert_info(message,infoclass){
        var template1 = info_template.replace('{substitue}',message).replace('{infoclass}',infoclass)
        $("#alertInfo").html(template1)
      }
      var recentsize = 4;
      var getrecentmatch = function(){
        $.ajax({
          url:"/getrecentmatch",
          type:"GET",
          dataType:"json",
          success:function(data){ 

            for(var i=0;i<recentsize;i++){
              var homescore = data[i].homescore == -1? "未开赛":data[i].homescore;
              var awayscore = data[i].awayscore == -1? "未开赛":data[i].awayscore;
              var card = cardtemplate.replace('{homeplayername}',data[i].homeplayername)
                                      .replace('{awayplayername}',data[i].awayplayername)
                                      .replace('{homescore}',homescore)
                                      .replace('{awayscore}',awayscore)
              $("#card"+i).html(card)                         
            }
          }
          })
      }
      var preparetpl = "<tr><td>{leaguename}</td><td>{description}</td><td><a href='/users/signupleague?leagueid={leagueid}' class='btn btn-primary'>报名</a></td></tr>";
      var getprepareleague = function(){
        $.ajax({
          url:"/getprepareleague",
          type:"GET",
          dataType:"json",
          success:function(data){ 
            $("#signuptable >tbody").empty()
            for(var i=0;i<recentsize;i++){
              var card = preparetpl.replace('{leaguename}',data[i].leaguename)
                                    .replace('{leagueid}',data[i].leagueid)
                                    .replace('{description}',"")
                                      
              $("#signuptable >tbody").append(card)                         
            }
          }
          })
      }
      var leaguetemplate = "<div class='row'><div class='col-xs-12'><div class='panel panel-default'>"+
                           "<div class='panel-heading'>{leaguename}<a class='pull-right' href='/showleagueresult?leagueid={leagueid4}&leaguename={leaguename2}'>查看完整比赛结果</a></div><div class='panel-body' id='league{leagueid1}goupdiv'>"+
                           "<ul class='nav nav-pills nav-justified' role='tablist' id='league{leagueid2}navdiv'></ul>"+
                           "<table class='table' id='league{leagueid3}table'>"+
                           "<thead><th>#</th><th>选手</th><th>比赛场数</th><th>胜</th><th>平</th><th>负</th><th> 进球 </th><th>失球</th><th>净胜球</th><th>积分</th>"+
                           "</thead><tbody></tbody></table>"+
                           "</div></div></div></div>";
      var leaguenavtpl = '<li id="li{leagueid1}{groupid1}" role="presentation"  class="{active}"><a href="javaScript:showgrouptable({leagueid},{groupid})">{groupname}</a></li>';
      var getleagueandgroup = function(){
        $.ajax({
          url:"/getleagueandgroup",
          type:"GET",
          dataType:"json",
          success:function(data){ 
            var tempdata = {};
            $.each(data,function(index,value){

               if(tempdata[value.leagueid] == undefined){
                  tempdata[value.leagueid] =[]
                  tempdata[value.leagueid].push(value);
               }else{
                  tempdata[value.leagueid].push(value);
               }
              })
            $.each(tempdata,function(index,value){
              console.log(value)
              if(value != undefined){
                var adddiv = leaguetemplate.replace('{leaguename}',value[0].leaguename)
                                            .replace('{leaguename2}',value[0].leaguename)
                                           .replace('{leagueid1}',value[0].leagueid)
                                            .replace('{leagueid2}',value[0].leagueid)
                                            .replace('{leagueid3}',value[0].leagueid)
                                            .replace('{leagueid4}',value[0].leagueid)
                $("#maincontainer").append(adddiv)
                $.each(value,function(i,v){
                  var active = i==0?"active":"";
                  var li = leaguenavtpl.replace('{leagueid}',v.leagueid)
                                        .replace('{groupid}',v.groupid)
                                        .replace('{leagueid1}',v.leagueid)
                                        .replace('{groupid1}',v.groupid)
                                        .replace('{groupname}',v.groupname)
                                        .replace('{active}',active)
                  $("#league"+v.leagueid+"navdiv").append(li)
                  })
                showgrouptable(value[0].leagueid,value[0].groupid)
              }
            })
          }
        })
      }
      var scoretabletpl = "<tr class='{class}'><td>{no}</td><td>{name}</td><td>{totalmatch}</td><td>{totalwin}</td><td>{totalequal}</td>"+
                          "<td>{totallose}</td><td>{totalgoal}</td><td>{totallosegoal}</td><td>{totalgetgoal}</td><td>{score}</td></tr>";
      function showgrouptable(leagueid,groupid,x){
        $.ajax({
          url:"/getscoreboard",
          type:"POST",
          data:{"groupid":groupid},
          dataType:"json",
          success:function(data){ 
            $("#league"+leagueid+"table >tbody").empty()
            $.each(data,function(index,value){
              var classtype = index<2?"success":""
              var tr = scoretabletpl.replace('{name}',value.playername)
                                    .replace('{totalmatch}',value.totalmatch)
                                    .replace('{totalwin}',value.totalwin)
                                    .replace('{totalequal}',value.totalequal)
                                    .replace('{totallose}',value.totallose)
                                    .replace('{totalgoal}',value.totalgoal)
                                    .replace('{totallosegoal}',value.totallosegoal)
                                    .replace('{totalgetgoal}',value.totalgetgoal)
                                    .replace('{score}',value.score)
                                    .replace('{no}',index+1)
                                    .replace('{class}',classtype)

               $("#league"+leagueid+"table >tbody").append(tr)
              })
            
            $("#league"+leagueid+"navdiv >li").removeClass('active');
            $("#li"+leagueid+groupid).addClass('active')
          }
        })
        
      }

      $(function(){
        getrecentmatch()
        getleagueandgroup()
        getprepareleague()
      })

